Ejercicio 2: 
Inciso a) 

	Const 
		M = ....... ;   =>>orden del arbol
	type
		alumno = record
			Nombre : string[20]; 
			Apellido : string[20]; 
			dni : String[8]; 
			legajo : integer;
			anhoIngreso : integer; 
		end; 
			
			
		nodoB = record
			elementos : array [1..M-1] of string[8]; elegimos el dni como clave 
			hijos : array[1..M] of ^nodoB; 
			elementosActuales : integer;
		end; 
		
		archivo : file of Alumno; Archivo desordenado	
		indice : file of nodoB;  arbol b de indices 
Inciso b) 
		** completar
		
Inciso c) 		
 Un orden más grande en un árbol B generalmente tiene como capacidad la recuperación más eficiente de elementos con un solo acceso
 , ya que reduce la profundidad del árbol y aumenta su ancho.
 Es decir, en un arbol de mayor orden, se expande a lo ancho, y cada nodo tiene una mayor cantidad de elementos par almacenar.
 Por lo tanto, con un acceso a disco, se pueden traer varios elementos. 
 
 inciso d) 
	Siempre, se empieza por la raiz del arbol.
	Compara la clave buscada, con las claves en el nodo actual,
	si la clave buscada esta en el nodo actual , la busqueda termina
	si la clave buscada es menor que las claves del nodo actual, se mueve de forma recursiva
	hacia el hijo izquierdo, y empieza devuelta con el ciclo de comparar
	si la clave buscada es mayor que las claves del nodo actual, se mueve de forma recursiva
	hacia el hijo derecho, y empieza devuelta con el ciclo de comparar
	Este proceso, lo repite hasta encontrar el nodo que contiene la clave, o hasta que llegue a un punto
	que se asegure que la clave no se encuentra en el arbol. 
	
inciso e) 
	Si se quiere hacer una busqueda por legajo, con la estructura actual, se deberia hacer una busqueda secuencial
	en el archivo de datos. (esto es demasiado costoso)

	En un indice, que se creo con el fin de usar el dni como clave, no tiene sentido buscar por numero de legajo
	porque no esta ordenado por ese criterio. Si se quiere brindar acceso indizado al archivo de alumnos, por numero de legajo,
	se deberia generar un indice, el cual tenga como clave numeros de legajo. 
	
	Entonces, no tiene sentido usar un indice ordenado por un criterio, y intentar buscar por otro criterio. 
	
inciso f) 
Esta operación puede ser costosa en términos de tiempo y recursos, ya que implica realizar múltiples accesos al árbol y 
comparaciones de valores en cada nivel. Además, el árbol B no está optimizado para este tipo de consultas.

Si se quiere buscar elementos en un rango, seria mejor opcion tener un arbol b+, el cual tenemos un acceso secuencial rapido, porque 
utiliza una lista enlazada. 
